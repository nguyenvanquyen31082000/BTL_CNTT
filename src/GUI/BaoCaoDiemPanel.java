/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DTO.BaoCaoDiemDto;
import DTO.DiemThi;
import DTO.MonThi;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.ss.util.CellRangeAddress;

/**
 *
 * @author Audd
 */
public class BaoCaoDiemPanel extends javax.swing.JPanel {

    ArrayList<BaoCaoDiemDto> list = new ArrayList<>();
    static String userLogin = "";

    /**
     * Creates new form DiemPanel
     */
    public BaoCaoDiemPanel(String username) throws SQLException {
        userLogin = username;
        initComponents();
        String type = "";
        if (rdoDacodiem.isSelected()) {
            type = "1";
        } else {
            type = "2";
        }
        DefaultTableModel model = (DefaultTableModel) tblDiem.getModel();
        BUS.UtilityClass.clearRowJTable(tblDiem);

        list = BUS.DiemBUS.search_DiemsBaoCao(txtSBDTimKiem, cbbMonThi, cbbNamThiTK, type);
        if (list.isEmpty()) {
            btnExportExcel.setEnabled(false);
        } else {
            btnExportExcel.setEnabled(true);
        }
        list.forEach((a) -> {
            model.addRow(new Object[]{
                a.getIdThiSinh(), a.getHoten(), a.getCmnd(), a.getIdMonThi(), a.getTenmon(), a.getDiem(), a.getCumThi(), a.getNamThi()
            });
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtSBDTimKiem = new javax.swing.JTextField();
        cbbMonThi = new javax.swing.JComboBox<>();
        cbbNamThiTK = new javax.swing.JComboBox<>();
        btnTimKiem = new javax.swing.JButton();
        rdoChuacodiem = new javax.swing.JRadioButton();
        rdoDacodiem = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        btnExportExcel = new javax.swing.JButton();
        btnDong = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDiem = new javax.swing.JTable();

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel6.setText("Tìm Kiếm");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Số Báo Danh:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Môn Thi:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Năm Thi:");

        txtSBDTimKiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cbbMonThi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbMonThi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Tất Cả>", "Toán", "Vật Lý", "Hóa Học", "Sinh Học", "Ngữ Văn", "Lịch Sử", "Địa Lý" }));

        cbbNamThiTK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbNamThiTK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Tất Cả>", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "" }));

        btnTimKiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-search-16.png"))); // NOI18N
        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoChuacodiem);
        rdoChuacodiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoChuacodiem.setText("Chưa có điểm");
        rdoChuacodiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoChuacodiemActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoDacodiem);
        rdoDacodiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoDacodiem.setSelected(true);
        rdoDacodiem.setText("Đã có điểm");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Loại:");

        btnExportExcel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnExportExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-export-excel-24.png"))); // NOI18N
        btnExportExcel.setText("Xuất Excel");
        btnExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportExcelActionPerformed(evt);
            }
        });

        btnDong.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-close-16.png"))); // NOI18N
        btnDong.setText("Đóng");
        btnDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addComponent(jSeparator3)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rdoDacodiem)
                                        .addGap(14, 14, 14)
                                        .addComponent(rdoChuacodiem))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtSBDTimKiem)
                                        .addComponent(cbbMonThi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbbNamThiTK, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(btnTimKiem)
                        .addGap(14, 14, 14)
                        .addComponent(btnExportExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDong)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtSBDTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbbMonThi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cbbNamThiTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rdoDacodiem)
                    .addComponent(rdoChuacodiem))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDong)
                        .addComponent(btnExportExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTimKiem))
                .addGap(75, 75, 75)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblDiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã thí sinh", "Họ tên", "CMND", "Mã môn thi", "Tên môn", "Điểm", "Cụm thi", "Năm thi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDiemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDiem);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 735, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        String type = "";
        if (rdoDacodiem.isSelected()) {
            type = "1";
        } else {
            type = "2";
        }
        DefaultTableModel model = (DefaultTableModel) tblDiem.getModel();
        BUS.UtilityClass.clearRowJTable(tblDiem);
        list = BUS.DiemBUS.search_DiemsBaoCao(txtSBDTimKiem, cbbMonThi, cbbNamThiTK, type);
        if (list.isEmpty()) {
            btnExportExcel.setEnabled(false);
            JOptionPane.showMessageDialog(this, "Không tìm thấy thông tin phù hợp!", "Thông Báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        btnExportExcel.setEnabled(true);

        list.forEach((a) -> {
            model.addRow(new Object[]{
                a.getIdThiSinh(), a.getHoten(), a.getCmnd(), a.getIdMonThi(), a.getTenmon(), a.getDiem(), a.getCumThi(), a.getNamThi()
            });
        });

    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void tblDiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDiemMouseClicked

    }//GEN-LAST:event_tblDiemMouseClicked

    private void rdoChuacodiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoChuacodiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoChuacodiemActionPerformed

    private void btnExportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportExcelActionPerformed
        try {
            String exportPath = "";
            JFileChooser jf = new JFileChooser();
            FileFilter filter = new FileNameExtensionFilter("Files", ".xls");
            jf.addChoosableFileFilter(filter);
            jf.setAcceptAllFileFilterUsed(false);
            jf.setDialogTitle("Save Excel File");
            Date date = new Date();
            SimpleDateFormat formatter = new SimpleDateFormat("ddMMyyyyHHmmss");
            String strDate = formatter.format(date);
            jf.setSelectedFile(new File("Thong_ke_diem_" + strDate + ".xls"));
            int result = jf.showSaveDialog(null);
            if (result == JFileChooser.APPROVE_OPTION) {
                exportPath = jf.getSelectedFile().getAbsolutePath();
                exportExcel(list, exportPath);
                JOptionPane.showMessageDialog(this, "Xuất báo cáo thành công!", "Thông Báo", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Thông Báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExportExcelActionPerformed
    public void exportExcel(ArrayList<BaoCaoDiemDto> list, String exportPath) throws IOException {
        HSSFWorkbook workbook = null;
        FileOutputStream outFile = null;
        try {
            Date date = new Date();
            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            String strDate = formatter.format(date);
            workbook = new HSSFWorkbook();
            HSSFSheet sheet = workbook.createSheet("Diem");
            int rownum = 0;
            Cell cell;
            Row row;
            HSSFCellStyle style = createStyleForTitle(workbook);
            style.setBorderBottom(BorderStyle.THIN);
            style.setBottomBorderColor(IndexedColors.BLACK.getIndex());
            style.setBorderLeft(BorderStyle.THIN);
            style.setLeftBorderColor(IndexedColors.BLACK.getIndex());
            style.setBorderRight(BorderStyle.THIN);
            style.setRightBorderColor(IndexedColors.BLACK.getIndex());
            style.setBorderTop(BorderStyle.THIN);
            style.setTopBorderColor(IndexedColors.BLACK.getIndex());
            style.setAlignment(HorizontalAlignment.CENTER);
            style.setFillForegroundColor(IndexedColors.GREY_50_PERCENT.index);
            // and solid fill pattern produces solid grey cell fill
            style.setFillPattern(FillPatternType.SOLID_FOREGROUND);
            HSSFCellStyle styleTitle = createStyleForTitle(workbook);
            styleTitle.setAlignment(HorizontalAlignment.CENTER);
            styleTitle.setVerticalAlignment(VerticalAlignment.CENTER);
            Font font = workbook.createFont();
            font.setFontHeightInPoints((short) 22);
            font.setBold(true);
            styleTitle.setFont(font);
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 7));
            sheet.addMergedRegion(new CellRangeAddress(1, 1, 1, 2));
            sheet.addMergedRegion(new CellRangeAddress(2, 2, 1, 2));
            row = sheet.createRow(rownum);
            row.setHeight((short) 700);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("Thống kê điểm thí sinh");
            cell.setCellStyle(styleTitle);
            rownum++;
            HSSFCellStyle styleInfo = createStyleForTitle(workbook);
            Font fontInfo = workbook.createFont();
            fontInfo.setBold(true);
            styleInfo.setFont(fontInfo);
            row = sheet.createRow(rownum);
            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Ngày xuất : " + strDate);
            cell.setCellStyle(styleInfo);
            rownum++;
            row = sheet.createRow(rownum);
            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Người xuất : " + userLogin);
            cell.setCellStyle(styleInfo);
            rownum++;
            rownum++;
            row = sheet.createRow(rownum);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("Mã thí sinh");
            cell.setCellStyle(style);
            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Họ tên");
            cell.setCellStyle(style);
            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("CMND");
            cell.setCellStyle(style);
            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("Mã môn thi");
            cell.setCellStyle(style);
            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("Tên môn thi");
            cell.setCellStyle(style);
            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue("Điểm");
            cell.setCellStyle(style);
            cell = row.createCell(6, CellType.STRING);
            cell.setCellValue("Cụm thi");
            cell.setCellStyle(style);
            cell = row.createCell(7, CellType.STRING);
            cell.setCellValue("Năm thi");
            cell.setCellStyle(style);
            sheet.setColumnWidth(0, 10 * 256);
            sheet.setColumnWidth(1, 22 * 256);
            sheet.setColumnWidth(2, 30 * 256);
            sheet.setColumnWidth(3, 15 * 256);
            sheet.setColumnWidth(4, 15 * 256);
            sheet.setColumnWidth(5, 10 * 256);
            sheet.setColumnWidth(6, 20 * 256);
            sheet.setColumnWidth(7, 15 * 256);
// Data
            for (BaoCaoDiemDto emp : list) {
                rownum++;
                row = sheet.createRow(rownum);
                CellStyle styleData = workbook.createCellStyle();
                styleData.setBorderBottom(BorderStyle.THIN);
                styleData.setBottomBorderColor(IndexedColors.BLACK.getIndex());
                styleData.setBorderLeft(BorderStyle.THIN);
                styleData.setLeftBorderColor(IndexedColors.BLACK.getIndex());
                styleData.setBorderRight(BorderStyle.THIN);
                styleData.setRightBorderColor(IndexedColors.BLACK.getIndex());
                styleData.setBorderTop(BorderStyle.THIN);
                styleData.setTopBorderColor(IndexedColors.BLACK.getIndex());
                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue(emp.getIdThiSinh());
                cell.setCellStyle(styleData);
                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue(emp.getHoten());
                cell.setCellStyle(styleData);
                cell = row.createCell(2, CellType.STRING);
                cell.setCellValue(emp.getCmnd());
                cell.setCellStyle(styleData);
                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue(emp.getIdMonThi());
                cell.setCellStyle(styleData);
                cell = row.createCell(4, CellType.STRING);
                cell.setCellValue(emp.getTenmon());
                cell.setCellStyle(styleData);
                cell = row.createCell(5, CellType.STRING);
                cell.setCellValue(emp.getDiem());
                cell.setCellStyle(styleData);
                cell = row.createCell(6, CellType.STRING);
                cell.setCellValue(emp.getCumThi());
                cell.setCellStyle(styleData);
                cell = row.createCell(7, CellType.STRING);
                cell.setCellValue(emp.getNamThi());
                cell.setCellStyle(styleData);
            }
            rownum++;
            rownum++;
            row = sheet.createRow(rownum);
            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Tổng số : " + list.size());
            cell.setCellStyle(styleInfo);
            File file = new File(exportPath);
            file.getParentFile().mkdirs();
            outFile = new FileOutputStream(file);
            workbook.write(outFile);
        } catch (Exception e) {
        } finally {
            if (workbook != null) {
                workbook.close();
            }
            if (outFile != null) {
                outFile.close();
            }
        }

    }

    private static HSSFCellStyle createStyleForTitle(HSSFWorkbook workbook) {
        HSSFFont font = workbook.createFont();
        font.setBold(true);
        HSSFCellStyle style = workbook.createCellStyle();
        style.setFont(font);
        return style;
    }
    private void btnDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDongActionPerformed
        BaoCaoDiemPanel.this.getParent().remove(BaoCaoDiemPanel.this);
        MainFormAdmin.check4 = 0;
    }//GEN-LAST:event_btnDongActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDong;
    private javax.swing.JButton btnExportExcel;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbbMonThi;
    private javax.swing.JComboBox<String> cbbNamThiTK;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JRadioButton rdoChuacodiem;
    private javax.swing.JRadioButton rdoDacodiem;
    private javax.swing.JTable tblDiem;
    private javax.swing.JTextField txtSBDTimKiem;
    // End of variables declaration//GEN-END:variables
}
